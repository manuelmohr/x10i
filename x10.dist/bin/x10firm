#!/bin/bash

# determine toplevel directory of x10 installation
ME="$0"
if [ -L "${ME}" ]; then
	# TODO: readlink -f is NOT posix, but writing stuff manually is cumbersome
	# so I just hope nobody installs x10firm with symlinks on macs for now.
	ME="`readlink -f "${ME}"`"
fi
X10_TOP="$(cd "$(dirname "$ME")/../.." && pwd)"

VERBOSE=0
if [ "$1" = "-v" ]; then
	VERBOSE=1
	shift
fi

# Choose javavm. A user may for example use something like this:
#    JAVA="gdb --args java"
# to run x10firm in the gnu debugger
[ -z "${JAVA}" ] && JAVA="java"

# prepare classpath
classpath=""
append_classpath() {
	if [ -n "${classpath}" ]; then
		classpath="${classpath}:$1"
	else
		classpath="$1"
	fi
}

append_classpath "${X10_TOP}/x10.compiler/classes"
#append_classpath "${X10_TOP}/x10.runtime/classes"
append_classpath "${X10_TOP}/x10.firm_runtime/classes"
append_classpath "${X10_TOP}/x10.common/classes"
append_classpath "${X10_TOP}/x10.constraints/classes"
append_classpath "${X10_TOP}/x10.dist/lib/lpg.jar"
append_classpath "${X10_TOP}/x10.firm/classes"
append_classpath "${X10_TOP}/jFirm/classes"
append_classpath "${X10_TOP}/liboo/classes"
append_classpath "${X10_TOP}/jFirm/lib/jna.jar"

JNA_LIBRARY_PATH="${X10_TOP}/libfirm/build/debug"
JNA_LIBRARY_PATH="${JNA_LIBRARY_PATH}:${X10_TOP}/liboo/build"
# Some how we can not use -Djna.library.path= as java arguments, otherwise
# liboo won't find the referenced libfirm library (this is not the fault of jna
# but dlopen can't find it while opening liboo.so)
export LD_LIBRARY_PATH="$JNA_LIBRARY_PATH"
# and for our OS/X friends
export DYLD_LIBRARY_PATH="$JNA_LIBRARY_PATH"

# Collect arguments for the x10firm compiler
args="-extclass x10firm.ExtensionInfo"
args="${args} -x10lib ${X10_TOP}/x10.dist/firm-stdlib/libx10.properties"
args="${args} -sourcepath ${X10_TOP}/x10.dist/src-stdlib"
args="${args} -firmNativeTypes ${X10_TOP}/x10.dist/src-stdlib/firmNativeTypes.conf"

# Arguments for the JavaVM
java_args="-Xmx512m"
java_args="${java_args} -ea"
java_args="${java_args} -Dfile.encoding=UTF-8"
java_args="${java_args} -Dx10.dist=${X10_TOP}/x10.dist"

export X10RT_IMPL=sockets

# Run JavaVM
command="${JAVA} -classpath ${classpath} ${java_args} polyglot.main.Main ${args} "$@""
if [ "$VERBOSE" = "1" ]; then
	echo "$command"
fi
${command}
